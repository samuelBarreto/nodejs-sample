name: Build, Push, Deploy, and Release

on:
  pull_request:
    branches:
      - main
      - dev
    types:
      - closed
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'dev') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest

    outputs:
      docker_image_tag: ${{ steps.build_docker_image.outputs.docker_image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check for changes in specific files
        id: file_changes
        run: |
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "$CHANGED_FILES" > changed_files.txt
          echo "::set-output name=result::$(echo $CHANGED_FILES | grep -E '^(index.js|package.json|Dockerfile)$')"

      - name: Stop if no changes in specific files
        if: steps.file_changes.outputs.result == ''
        run: exit 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies (dev branch only)
        if: github.ref == 'refs/heads/dev'
        run: npm install

      - name: Run tests (dev branch only)
        if: github.ref == 'refs/heads/dev'
        run: npm test

      - name: Run Sonar analysis
        if: github.ref == 'refs/heads/dev'
        run: npm run sonar
        continue-on-error: true

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v1

      - name: Set env
        id: set_env
        if: github.ref == 'refs/heads/main'
        run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV

      - name: Build Docker image
        id: build_docker_image
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_TAG=1234samue/nodejs-sample:${GITHUB_REF_NAME}-${GITHUB_SHA}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker buildx create --use
          docker buildx inspect default --bootstrap
          docker buildx build --file Dockerfile -t $IMAGE_TAG --load .
          echo "::set-output name=docker_image_tag::$IMAGE_TAG"

      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_TAG=${{ steps.build_docker_image.outputs.docker_image_tag }}
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username 1234samue --password-stdin
          docker push $IMAGE_TAG

  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update manifest file
        if: github.ref == 'refs/heads/main'
        run: |    
          IMAGE_TAG=${{ needs.build-and-deploy.outputs.docker_image_tag }}
          git config user.name "$GITHUB_ACTOR"
          git config user.email "samukacfc1@gmail.com"
          yq eval '.spec.template.spec.containers[0].image = "'$IMAGE_TAG'"' -i deployments/deployment.yml
          
          git add deployments/deployment.yml
          git commit -m "updating newer image $IMAGE_TAG"
          git push origin main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          name: Release ${{ github.sha }}
          tag_name: v${{ github.run_number }}
          body: |
            Release created from commit ${{ github.sha }}
            - Node.js version: 14
            - Docker image: ${{ needs.build-and-deploy.outputs.docker_image_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: echo "Deploying to production environment"
