name: Build, Push, Deploy, and Release

on:
  pull_request:
    branches:
      - main
      - dev
      - dev-*
    types:
      - closed

jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check for changes in specific files
        id: file_changes
        run: |
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "$CHANGED_FILES" > changed_files.txt
          echo "::set-output name=result::$(echo $CHANGED_FILES | grep -E '^(index.js|package.json|Dockerfile)$')"

      - name: Stop if no changes in specific files
        if: steps.file_changes.outputs.result == ''
        run: exit 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Check test results
        if: failure()
        run: echo "Tests failed. Stopping the workflow."
        continue-on-error: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set env
        run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV  

      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx inspect default --bootstrap
          docker buildx build --file Dockerfile -t 1234samue/nodejs-sample:$GITHUB_REF_NAME-$GITHUB_SHA --load .

      - name: Push Docker image to Docker Hub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username 1234samue --password-stdin
          docker push 1234samue/nodejs-sample:$GITHUB_REF_NAME-$GITHUB_SHA

      - name: Update manifest file
        run: |    
          # Assuming you have a manifest file named k8s.yaml
          git config user.name "$GITHUB_ACTOR"
          git config user.email "samukacfc1@gmail.com"
          yq eval '.spec.template.spec.containers[0].image = "1234samue/nodejs-sample:${{ env.GITHUB_BRANCH }}"' -i deployments/deployment.yml
          
          git add .
          git commit -m "updating newer image 1234samue/nodejs-sample:${{ env.GITHUB_BRANCH }}"
          git push --set-upstream origin main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.sha }}
          tag_name: v${{ github.run_number }}
          body: |
            Release created from commit ${{ github.sha }}
            - Node.js version: 14
            - Docker image: 1234samue/nodejs-sample:${{ env.GITHUB_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Production
        environment: production
        run: echo "Deploying to production environment"
